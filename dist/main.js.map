{"mappings":"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","sources":["three-wheel-menu/src/index.js","three-wheel-menu/src/utils.js"],"sourcesContent":["import {rotToRad, getAngle} from './utils'\n\nclass WheelMenu {\n  /**\n   * wheel menu\n   * @param {Three} _THREE Three.js\n   * @param {THREE.Scene} scene THREE.Scene\n   * @param {THREE.PerspectiveCamera} camera THREE.PerspectiveCamera\n   * @param {HTMLCanvasElement} canvas \n   * @param {Oject}  options optional params \n   * @param {Item[]}  options.items optional params \n   * @param {string}  Item.name text as menu item\n   * @param {number}  Item.width item width\n   * @param {number}  Item.height item height\n   * @param {string}  Item.color text color of name\n   * @param {string}  Item.fillStyle item background color\n   * @param {string}  Item.font font of name\n   * @param {string}  Item.fontSize font size of name\n   * @param {number}  Item.padding item paddings\n   * @param {number}  options.radius radius of menu\n   * @param {x: number, y: number, z: number}  options.origin origin of menu\n   * @param {x: number, y: number, z: number}  options.rotation rotation of menu\n   * @param {func}  options.onClick fuction that is executed when click item\n   * @param {func}  options.onMoved fuction that is executed when rotate menu\n   * @param {Item}  options.selected Item that selected at initialization\n   * @param {boolean}  options.isBidirectional flag to decide whether rotation is bidirectional or unidirectional\n   * @param {boolean}  options.isReverse flag to change rotation direction\n   * @param {number}  options.selectedRotation rotation when Item is selected\n   */\n  constructor(\n    _THREE,\n    scene,\n    camera,\n    canvas,\n    {\n      items,\n      radius,\n      origin,\n      rotation,\n      onClick,\n      onMoved,\n      selected,\n      isBidirectional = false,\n      isReverse = false,\n      selectedRotation,\n    }\n  ) {\n    this.scene = scene\n    this.camera = camera\n    this.canvas = canvas\n    if(typeof THREE !== 'undefined') {\n      this.THREE = THREE\n    } else {\n      this.THREE = _THREE\n    }\n\n    this.radius = radius\n    this.wheel = new this.THREE.Object3D() // wrap object\n    this.onClick = onClick\n    this.onMoved = onMoved\n\n    this.items = items // item params\n    this.itemParams = {} // {uuid: item param}\n    this.itemList = [] // three.js objects\n\n    this.nextItem = null\n    this.currentItem = null\n    this.selected = selected ? selected : items[0]\n\n    this.isRotating = false\n    this.isBidirectional = isBidirectional\n    this.isReverse = isReverse\n\n    this.rotationDirection = 1 // rotation direction ±1\n    // vector to point when clicking an item\n    this.selectedVector = Math.abs(rotation.x) > Math.abs(rotation.y)\n      ? new this.THREE.Vector2(0, Math.sign(rotation.x) || -1)\n      : new this.THREE.Vector2(-Math.sign(rotation.y) || -1, 0)\n    this.X_VECTOR = new this.THREE.Vector2(1, 0)\n    this.ITEM_RATIO = 4\n\n    // apply selectedRotation\n    if(selectedRotation) {\n      const frontRad = rotToRad(selectedRotation)\n      const x = this.radius * Math.cos(frontRad)\n      const y = this.radius * Math.sin(frontRad)\n      this.selectedVector = new this.THREE.Vector2(x, y)\n      this.selectedVector.normalize()\n    }\n\n    const itemNum = items.length\n    const deg = 360/itemNum\n\n    // apply rotation & oriin to menu\n    this.wheel.rotation.x = rotation.x\n    this.wheel.rotation.y = rotation.y\n    this.wheel.rotation.z = rotation.z\n    this.wheel.position.x = origin.x\n    this.wheel.position.y = origin.y\n    this.wheel.position.z = origin.z\n\n    let rotateRad = 0\n    for(let i = 0; i < itemNum; i++) {\n      const isCanvas = (items[i] instanceof HTMLElement) && (items[i]?.tagName?.toLowerCase() === 'canvas')\n      const rad = rotToRad(i*deg)\n      // create par item vector\n      const itemVector = new this.THREE.Vector2(\n        radius * Math.cos(rad),\n        radius * Math.sin(rad),\n      )\n\n      const item = isCanvas\n        ? this.getCanvasSplite(items[i])\n        : this.getTextSplite({\n          text: items[i].name,\n          width: items[i].width || 300,\n          height: items[i].height,\n          color: items[i].color || '#000000',\n          fillStyle: items[i].fillStyle || '#ffffff',\n          font: items[i].font || 'Bold sans-serif',\n          fontSize: items[i].size || 20,\n          padding: items[i].padding || 10,\n        })\n\n      item.position.x = itemVector.x\n      item.position.y = itemVector.y\n\n      // rotate to selected item\n      if(\n        this.selected && isCanvas && this.selected.isEqualNode && this.selected.isEqualNode(items[i])\n        || this.selected && !isCanvas && this.selected?.name === items[i].name\n      ) {\n        rotateRad = this.getAngleToSelected(itemVector) * this.getRotationDirection(itemVector)\n        this.currentItem = item\n      }\n\n      this.itemParams[item.uuid] = isCanvas ? items[i] : {...items[i]}\n \n      // add item\n      this.itemList.push(item)\n      this.wheel.add(item)\n    }\n    this.currentItem = this.currentItem || this.itemList[0]\n    this.rotateMenu(rotateRad)\n\n    this.addClickEvent()\n    scene.add(this.wheel)\n \n    // add scroll event\n    canvas.addEventListener('wheel', (e) => {\n      if(Math.abs(e.deltaY) <= 20) return\n      let i = this.itemList.findIndex(item => item.uuid === this.currentItem.uuid)\n      i = (e.deltaY > 0)\n        ? (i-1) < 0 ? this.itemList.length-1 : (i-1)\n        : (i+1) >= this.itemList.length ? 0 : (i+1)\n      this.rotateMenuToSelectedPosition(this.itemList[i])\n    })\n  }\n\n  /**\n   * rotate menu\n   * @param {number} rad \n   */\n  rotateMenu(rad) {\n    this.itemList.forEach((item) => {\n      const {x, y} = item.position\n      const newRad = Math.atan2(y, x) + rad\n\n      const newX = this.radius * Math.cos(newRad)\n      const newY = this.radius * Math.sin(newRad)\n\n      item.position.x = newX\n      item.position.y = newY\n    })\n  }\n\n  /**\n   * rotate menu to selected position\n   * @param {Item} item \n   */\n  rotateMenuToSelectedPosition(item) {\n    this.nextItem = item\n    const vector = new this.THREE.Vector2(item.position.x, item.position.y)\n    vector.normalize()\n    this.rotationDirection = this.getRotationDirection(vector)\n    if(!this.isRotating && this.currentItem.uuid !== this.nextItem.uuid) {\n      this.isRotating = true\n    }\n  }\n\n  /**\n   * get radian between any vector & vector to selected positon\n   * @param {Three.Vector2} vector \n   * @returns {number} radian between any vector & vector to selected positon\n   */\n  getAngleToSelected(vector) {\n    vector.normalize()\n    const frontAngle = getAngle(this.selectedVector.x, this.selectedVector.y)\n    const targetAngle = getAngle(vector.x, vector.y)\n    let rad = Math.abs(frontAngle - targetAngle)\n    rad = angle < 0.1 && angle > 0.01 ? 0 : angle\n    return rad\n  }\n\n  /**\n   * get text size on canvas\n   * @param {string} text \n   * @param {string} font \n   * @returns {width: number, height: number} text width & height\n   */\n  getTextSizeOnCanvas(text, font) {\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n    context.font = font\n    const {width, actualBoundingBoxAscent, actualBoundingBoxDescent} = context.measureText(text)\n    const height = actualBoundingBoxAscent+actualBoundingBoxDescent\n    return {width, height}\n  }\n\n  /**\n   * get rotation direction to selected position as ±1\n   * @param {*} vector vector of any item \n   * @returns {number} rotation direction\n   */\n  getRotationDirection(vector) {\n    let sign = 1\n    if(!this.isBidirectional) {\n      const frontAngle = getAngle(this.selectedVector.x, this.selectedVector.y)\n      const targetAngle = getAngle(vector.x, vector.y)\n      const subTarget = Math.abs(frontAngle - targetAngle)\n      const subFrom360 = Math.abs(Math.PI*2 - subTarget)\n      if(frontAngle > targetAngle) {\n        sign = subTarget > subFrom360 ? -1 : 1\n      } else if(targetAngle > frontAngle) {\n        sign = subTarget > subFrom360 ? 1 : -1\n      }\n    }\n\n    return this.isReverse ? sign * -1 : sign\n  }\n\n  /**\n   * get Three.Sprite with any string\n   * @param {string} params.text\n   * @param {number} params.width\n   * @param {number} params.height\n   * @param {string} params.color\n   * @param {string} params.fillStyle\n   * @param {string} params.fontStyle\n   * @param {number} params.fontSize\n   * @param {number} params.padding\n   * @returns {Three.Sprite} Three.js Sprite object\n   */\n  getTextSplite({\n    text,\n    width = 0,\n    height = 0,\n    color = '#000',\n    fillStyle = '#fff',\n    fontStyle = 'sans-serif',\n    fontSize = 30,\n    padding = 0,\n  }) {\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n\n    const {width: w, height: h} = this.getTextSizeOnCanvas(text, `${fontSize*this.ITEM_RATIO}px ${fontStyle}`)\n    canvas.width = (width || w) + padding * 2\n    canvas.height = (height || h) + padding * 2\n\n    context.font = `${fontSize*this.ITEM_RATIO}px ${fontStyle}`\n\n    if(fillStyle) {\n      context.fillStyle = fillStyle\n      context.fillRect(0, 0, width || canvas.width, canvas.height)\n    }\n    context.fillStyle = color\n\n    const textX = (width || canvas.width)/2 - w/2\n    const textY = (height || canvas.height)/2 + h/2\n\n    context.fillText(text, textX, textY)\n\n    const texture = new this.THREE.Texture(canvas) \n    texture.needsUpdate = true\n    const material = new this.THREE.SpriteMaterial({map: texture, transparent:false, sizeAttenuation: true })\n    const sprite = new this.THREE.Sprite(material)\n    sprite.scale.set(canvas.width/this.ITEM_RATIO, canvas.height/this.ITEM_RATIO, 1)\n    return sprite\n  }\n\n  /**\n   * get Three.Sprite with any HTMLCanvasElement\n   * @param {HTMLCanvasElement} canvas\n   * @returns {Three.Sprite} Three.js Sprite object\n   */\n  getCanvasSplite(canvas) {\n    const texture = new this.THREE.Texture(canvas) \n    texture.needsUpdate = true\n\n    const material = new this.THREE.SpriteMaterial({map: texture, transparent:false, sizeAttenuation: true})\n    const sprite = new this.THREE.Sprite(material)\n    sprite.scale.set(canvas.width/this.ITEM_RATIO, canvas.height/this.ITEM_RATIO, 1)\n    return sprite\n  }\n\n  /**\n   * add onClick event to wheel menu\n   */\n  addClickEvent() {\n    // register mouse click event\n    const mouse = new this.THREE.Vector2()\n    const raycaster = new this.THREE.Raycaster()\n\n    const handleMouseClick = (event) => {\n      const element = event.currentTarget\n      const x = event.clientX - element.offsetLeft\n      const y = event.clientY - element.offsetTop\n      const w = element.offsetWidth\n      const h = element.offsetHeight\n      mouse.x = (x / w) * 2 - 1\n      mouse.y = -(y / h) * 2 + 1\n      raycaster.setFromCamera(mouse, this.camera)\n      const intersects = raycaster.intersectObjects(this.wheel.children)\n      if(intersects && intersects.length > 0 && intersects[0]?.object) {\n        const item = intersects[0]?.object\n        if(this.onClick) this.onClick(this.itemParams[item.uuid], item)\n        this.rotateMenuToSelectedPosition(item)\n      }\n    }\n\n    this.canvas.addEventListener('click', handleMouseClick)\n  }\n\n  /**\n   * execute animation\n   */\n  tick() {\n    if(this.isRotating === false) return\n    const angle = this.getAngleToSelected(new this.THREE.Vector2(this.nextItem.position.x, this.nextItem.position.y))\n    if(angle > 0.1) {\n      this.rotateMenu(0.1*this.rotationDirection)\n    } else {\n      this.isRotating = false\n      this.currentItem = this.nextItem\n      if(this.onMoved) this.onMoved(this.itemParams[this.nextItem.uuid], this.nextItem)\n    }\n  }\n\n}\n\nexport default  WheelMenu\nwindow.WheelMenu = WheelMenu\n","/**\n * get angle formed by vector(x,y) & vector(1,0)\n * @param {number} x \n * @param {number} y \n * @returns {number} radian (0 ~ 2π)\n */\nexport const getAngle = (x, y) => {\n  if(y === 0) {\n    return x >= 0 ? 0 : Math.PI\n  }\n  const a2 = Math.atan2(y, x)\n  if(a2 > 0 ) {\n    return a2\n  } else {\n    return Math.PI*2 + a2\n  }\n}\n\n/**\n * change rotation to radius\n * @param {number} rot rotation\n * @returns {number} radian\n */\nexport const rotToRad = (rot) => rot * (Math.PI/180)\n"],"names":[],"version":3,"file":"main.js.map"}