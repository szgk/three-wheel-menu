{"mappings":"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","sources":["dist/three-wheel-menu/src/utils.js","dist/three-wheel-menu/src/index.js"],"sourcesContent":["export const getAngle = (x, y) => {\n  if(y === 0) {\n    return x >= 0 ? 0 : Math.PI\n  }\n  const a2 = Math.atan2(y, x)\n  if(a2 > 0 ) {\n    return a2\n  } else {\n    return Math.PI*2 + a2\n  }\n}\n\nexport const rotToRad = (rot) => rot * (Math.PI/180)\n\nexport const radToRot = (rad) => rad * (180/Math.PI)\n\nexport const getFormedAngle = (v1, v2) => Math.acos(v1.dot(v2) / (v1.length() * v2.length())) || 0\n","import {rotToRad, getAngle} from './utils'\n\nclass WheelMenu {\n  constructor(\n    _THREE,\n    scene,\n    camera,\n    canvas,\n    {\n      items,\n      radius,\n      origin,\n      rotation,\n      onClick,\n      selected,\n      isBidirectional = false,\n      isReverse = false,\n      selectedRotation,\n    }\n  ) {\n    this.scene = scene\n    this.camera = camera\n    this.canvas = canvas\n    if(typeof THREE !== 'undefined') {\n      this.THREE = THREE\n    } else {\n      this.THREE = _THREE\n    }\n\n    this.radius = radius\n    this.wheel = new this.THREE.Object3D() // wrap object\n    this.onClick = onClick\n\n    this.items = items // item params\n    this.itemParams = {} // {uuid: item param}\n    this.itemList = [] // three.js objects\n\n    this.nextItem = null\n    this.currentItem = null\n    this.selected = selected ? selected : items[0]\n\n    this.isRotating = false\n    this.isBidirectional = isBidirectional\n    this.isReverse = isReverse\n\n    this.rotationDirection = 1 // rotation direction Â±1\n    // vector to point when clicking an item\n    this.selectedVector = Math.abs(rotation.x) > Math.abs(rotation.y)\n      ? new this.THREE.Vector2(0, Math.sign(rotation.x) || -1)\n      : new this.THREE.Vector2(-Math.sign(rotation.y) || -1, 0)\n    this.X_VECTOR = new this.THREE.Vector2(1, 0)\n    this.ITEM_RATIO = 4\n\n    if(selectedRotation) {\n      const frontRad = rotToRad(selectedRotation)\n      const x = this.radius * Math.cos(frontRad)\n      const y = this.radius * Math.sin(frontRad)\n      this.selectedVector = new this.THREE.Vector2(x, y)\n      this.selectedVector.normalize()\n    }\n\n    const itemNum = items.length\n    const deg = 360/itemNum\n\n    this.wheel.rotation.x = rotation.x\n    this.wheel.rotation.y = rotation.y\n    this.wheel.rotation.z = rotation.z\n    this.wheel.position.x = origin.x\n    this.wheel.position.y = origin.y\n    this.wheel.position.z = origin.z\n\n    let rotateRad = 0\n    for(let i = 0; i < itemNum; i++) {\n      const isCanvas = (items[i] instanceof HTMLElement) && (items[i]?.tagName?.toLowerCase() === 'canvas')\n      const rad = rotToRad(i*deg)\n      // create par item vector\n      const itemVector = new this.THREE.Vector2(\n        radius * Math.cos(rad),\n        radius * Math.sin(rad),\n      )\n\n      const item = isCanvas\n        ? this.createCanvasSplite(items[i])\n        : this.createTextSplite({\n          text: items[i].name,\n          width: items[i].width || 300,\n          height: items[i].height,\n          color: items[i].color || '#000000',\n          fillStyle: items[i].fillStyle || '#ffffff',\n          font: items[i].font || 'Bold sans-serif',\n          fontSize: items[i].size || 20,\n          padding: items[i].padding || 10,\n        })\n\n      item.position.x = itemVector.x\n      item.position.y = itemVector.y\n\n      // rotate to selected item\n      if(\n        this.selected && isCanvas && this.selected.isEqualNode && this.selected.isEqualNode(items[i])\n        || this.selected && !isCanvas && this.selected?.name === items[i].name\n      ) {\n        rotateRad = this.getSelectedAngle(itemVector) * this.getRotationDirection(itemVector)\n        this.currentItem = item\n      }\n\n      this.itemParams[item.uuid] = isCanvas ? items[i] : {...items[i]}\n \n      // add item\n      this.itemList.push(item)\n      this.wheel.add(item)\n    }\n    this.currentItem = this.currentItem || this.itemList[0]\n    this.rotateMenu(rotateRad)\n\n    this.addClickEvent()\n    scene.add(this.wheel)\n \n    // add scroll event\n    canvas.addEventListener('wheel', (e) => {\n      if(Math.abs(e.deltaY) <= 20) return\n      let i = this.itemList.findIndex(item => item.uuid === this.currentItem.uuid)\n      i = (e.deltaY > 0)\n        ? (i-1) < 0 ? this.itemList.length-1 : (i-1)\n        : (i+1) >= this.itemList.length ? 0 : (i+1)\n      this.moveToItem(this.itemList[i])\n    })\n  }\n\n  rotateMenu(rad) {\n    this.itemList.forEach((item) => {\n      const {x, y} = item.position\n      const newRad = Math.atan2(y, x) + rad\n\n      const newX = this.radius * Math.cos(newRad)\n      const newY = this.radius * Math.sin(newRad)\n\n      item.position.x = newX\n      item.position.y = newY\n    })\n  }\n\n  moveToItem(item) {\n    this.nextItem = item\n    const vector = new this.THREE.Vector2(item.position.x, item.position.y)\n    vector.normalize()\n    this.rotationDirection = this.getRotationDirection(vector)\n    if(!this.isRotating && this.currentItem.uuid !== this.nextItem.uuid) {\n      this.isRotating = true\n    }\n  }\n\n  getSelectedAngle(vector) {\n    vector.normalize()\n    const frontAngle = getAngle(this.selectedVector.x, this.selectedVector.y)\n    const targetAngle = getAngle(vector.x, vector.y)\n    return Math.abs(frontAngle - targetAngle)\n  }\n\n  getTextSizeOnCanvas(text, font) {\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n    context.font = font\n    const {width, actualBoundingBoxAscent, actualBoundingBoxDescent} = context.measureText(text)\n    const height = actualBoundingBoxAscent+actualBoundingBoxDescent\n    return {width, height}\n  }\n\n  getRotationDirection(vector) {\n    let sign = 1\n    if(!this.isBidirectional) {\n      const frontAngle = getAngle(this.selectedVector.x, this.selectedVector.y)\n      const targetAngle = getAngle(vector.x, vector.y)\n      const subTarget = Math.abs(frontAngle - targetAngle)\n      const subFrom360 = Math.abs(Math.PI*2 - subTarget)\n      if(frontAngle > targetAngle) {\n        sign = subTarget > subFrom360 ? -1 : 1\n      } else if(targetAngle > frontAngle) {\n        sign = subTarget > subFrom360 ? 1 : -1\n      }\n    }\n\n    return this.isReverse ? sign * -1 : sign\n  }\n\n  createTextSplite({\n    text,\n    width = 0,\n    height = 0,\n    color = '#000',\n    fillStyle = '#fff',\n    fontStyle = 'sans-serif',\n    fontSize = 30,\n    padding = 0,\n  }) {\n    const canvas = document.createElement('canvas')\n    const context = canvas.getContext('2d')\n\n    const {width: w, height: h} = this.getTextSizeOnCanvas(text, `${fontSize*this.ITEM_RATIO}px ${fontStyle}`)\n    canvas.width = (width || w) + padding * 2\n    canvas.height = (height || h) + padding * 2\n\n    context.font = `${fontSize*this.ITEM_RATIO}px ${fontStyle}`\n\n    if(fillStyle) {\n      context.fillStyle = fillStyle\n      context.fillRect(0, 0, width || canvas.width, canvas.height)\n    }\n    context.fillStyle = color\n\n    const textX = (width || canvas.width)/2 - w/2\n    const textY = (height || canvas.height)/2 + h/2\n\n    context.fillText(text, textX, textY)\n\n    const texture = new this.THREE.Texture(canvas) \n    texture.needsUpdate = true\n    const material = new this.THREE.SpriteMaterial({map: texture, transparent:false, sizeAttenuation: true })\n    const sprite = new this.THREE.Sprite(material)\n    sprite.scale.set(canvas.width/this.ITEM_RATIO, canvas.height/this.ITEM_RATIO, 1)\n    return sprite\n  }\n\n  createCanvasSplite(canvas) {\n    const texture = new this.THREE.Texture(canvas) \n    texture.needsUpdate = true\n\n    const material = new this.THREE.SpriteMaterial({map: texture, transparent:false, sizeAttenuation: true})\n    const sprite = new this.THREE.Sprite(material)\n    sprite.scale.set(canvas.width/this.ITEM_RATIO, canvas.height/this.ITEM_RATIO, 1)\n    return sprite\n  }\n\n  addClickEvent() {\n    // register mouse click event\n    const mouse = new this.THREE.Vector2()\n    const raycaster = new this.THREE.Raycaster()\n\n    const handleMouseClick = (event) => {\n      const element = event.currentTarget\n      const x = event.clientX - element.offsetLeft\n      const y = event.clientY - element.offsetTop\n      const w = element.offsetWidth\n      const h = element.offsetHeight\n      mouse.x = (x / w) * 2 - 1\n      mouse.y = -(y / h) * 2 + 1\n      raycaster.setFromCamera(mouse, this.camera)\n      const intersects = raycaster.intersectObjects(this.wheel.children)\n      if(intersects && intersects.length > 0 && intersects[0]?.object) {\n        const item = intersects[0]?.object\n        this.onClick(this.itemParams[item.uuid], item)\n        this.moveToItem(item)\n      }\n    }\n\n    this.canvas.addEventListener('click', handleMouseClick)\n  }\n\n  tick() {\n    if(this.isRotating === false) return\n    const angle = this.getSelectedAngle(new this.THREE.Vector2(this.nextItem.position.x, this.nextItem.position.y))\n    if(angle > 0.1) {\n      this.rotateMenu(0.1*this.rotationDirection)\n    } else if(angle > 0.01) {\n      this.rotateMenu(0.01*this.rotationDirection)\n    } else {\n      this.isRotating = false\n      this.currentItem = this.nextItem\n    }\n  }\n\n}\n\nexport default  WheelMenu\nwindow.WheelMenu = WheelMenu\n"],"names":["$8cbaabfe2b5f9da3$var$$e15726cc9f000015$export$b363da9ded343252","x","y","Math","PI","a2","atan2","$8cbaabfe2b5f9da3$var$$e15726cc9f000015$export$e14086d5b9db11ed","rot","$8cbaabfe2b5f9da3$var$$a133e694903d6523$var$WheelMenu","_THREE","scene","camera","canvas","items","radius","origin","rotation","onClick","selected","isBidirectional","isReverse","selectedRotation","this","THREE","wheel","Object3D","itemParams","itemList","nextItem","currentItem","isRotating","rotationDirection","selectedVector","abs","Vector2","sign","X_VECTOR","ITEM_RATIO","frontRad","cos","sin","normalize","itemNum","length","deg","z","position","rotateRad","i1","isCanvas","HTMLElement","tagName","toLowerCase","rad","itemVector","item","createCanvasSplite","createTextSplite","text","name","width","height","color","fillStyle","font","fontSize","size","padding","isEqualNode","getSelectedAngle","getRotationDirection","uuid","push","add","rotateMenu","addClickEvent","addEventListener","e","deltaY","i","findIndex","moveToItem","forEach","newRad","newX","newY","item1","vector","frontAngle","targetAngle","getTextSizeOnCanvas","context","document","createElement","getContext","actualBoundingBoxAscent","actualBoundingBoxDescent","measureText","vector1","subTarget","subFrom360","text1","fontStyle","w","h","fillRect","textX","textY","fillText","texture","Texture","needsUpdate","material","SpriteMaterial","map","transparent","sizeAttenuation","sprite","Sprite","scale","set","canvas1","mouse","raycaster","Raycaster","event","element","currentTarget","clientX","offsetLeft","clientY","offsetTop","offsetWidth","offsetHeight","setFromCamera","intersects","intersectObjects","children","object","tick","angle","$8cbaabfe2b5f9da3$var$$a133e694903d6523$export$2e2bcd8739ae039","window","WheelMenu"],"version":3,"file":"index.9bdd56e8.js.map"}